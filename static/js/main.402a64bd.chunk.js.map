{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","components/services/getUser.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","cn","completed","title","TodoList","todos","map","username","getUser","userId","usersFromServer","find","initialTodos","App","useState","setTodos","setTitle","titleError","setTitleError","option","setOption","userError","setUserError","action","method","onSubmit","event","preventDefault","newTodo","Math","max","apply","element","currentTodo","onAdd","type","value","placeholder","onChange","e","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.402a64bd.chunk.js","sourcesContent":["import { UserInfoType } from '../types/UserAndTodo';\n\nexport const UserInfo: React.FC<UserInfoType> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { TodoInfoType } from '../types/UserAndTodo';\n\nexport const TodoInfo: React.FC<TodoInfoType> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && (\n        <UserInfo user={todo.user} />\n      )}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo, TodosInfoType } from '../types/UserAndTodo';\n\nexport const TodoList: React.FC<TodosInfoType> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo: Todo) => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../../api/users';\n\nexport function getUser(userId: number) {\n  return usersFromServer.find(user => user.id === userId);\n}\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { getUser } from './components/services/getUser';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './components/types/UserAndTodo';\n\nexport const initialTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n\n  const [option, setOption] = useState(0);\n  const [userError, setUserError] = useState(false);\n\n  const onAdd = (todo: Todo) => {\n    const newTodo = {\n      ...todo,\n      id: Math.max.apply(null, todos.map((element) => element.id)) + 1,\n    };\n\n    setTodos(currentTodo => [...currentTodo, newTodo]);\n  };\n\n  function reset() {\n    setTitle('');\n    setOption(0);\n    setTitleError(false);\n    setUserError(false);\n  }\n\n  const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    setTitle(value);\n    setTitleError(false);\n  };\n\n  const handleUserChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = e.target;\n\n    setOption(+value);\n    setUserError(false);\n  };\n\n  function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n\n    setTitleError(!title);\n    setUserError(option === 0);\n\n    if (title && option !== 0) {\n      onAdd({\n        id: 0,\n        title,\n        completed: false,\n        userId: 0,\n        user: getUser(+option),\n      });\n\n      reset();\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:&nbsp;\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              placeholder=\"Enter a title\"\n              onChange={handleTitleChange}\n            />\n          </label>\n\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:&nbsp;\n            <select\n              data-cy=\"userSelect\"\n              value={option}\n              onChange={handleUserChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map((user) => (\n                <option value={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}